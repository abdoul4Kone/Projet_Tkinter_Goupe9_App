
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

from tkinter import *
# Explicit imports to satisfy Flake8


produit_id = 6
#Afficher le compter
def ajouterPanier():
    from session_manager import user_id
    if user_id !=None:
        counter.set(1)
        counter_frame.place(x=750, y=354.0, width=120, height=40)
        button_10.configure(state =DISABLED)
        fillPanier(produit_id,counter.get())
    else: 
        from subprocess import call
        window.destroy()
        call(["python", "Login.py"])
        
 
from script import fillPanier, connect_to_database

connect_to_database()   
# Fonction pour augmenter le compteur
def increment_counter():
    counter.set(counter.get() + 1)
    fillPanier(produit_id,counter.get())

# Fonction pour diminuer le compteur
def decrement_counter():
    if counter.get() > 0:  # Empêche le compteur de devenir négatif
        counter.set(counter.get() - 1)
        c = counter.get() - 1
    if counter.get()==0:
        counter_frame.place_forget() 
        button_10.configure(state =NORMAL)   
    fillPanier(produit_id,counter.get())

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r".\assets\assets\frame6")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("1200x780")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 780,
    width = 1200,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    0.0,
    111.0,
    1200.0,
    156.0,
    fill="#EEEEEE",
    outline="")

canvas.create_rectangle(
    0.0,
    0.0,
    1200.0,
    136.0,
    fill="#1B6392",
    outline="")

canvas.create_text(
    55.0,
    12.0,
    anchor="nw",
    text="Bienvenue sur le site e commerce de group 9. ",
    fill="#FFFFFF",
    font=("PublicSans Regular", 14 * -1)
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_1 clicked"),
    relief="flat",
    bg="#1B6392"
)
button_1.place(
    x=1124.0,
    y=75.0,
    width=32.0,
    height=32.0
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    601.0,
    90.5,
    image=entry_image_1
)
entry_1 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=414.0,
    y=70.0,
    width=374.0,
    height=39.0
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    776.0,
    91.0,
    image=image_image_1
)

canvas.create_rectangle(
    -1.0,
    48.892725166584114,
    1708.9998964657862,
    52.0,
    fill="#FFFFFF",
    outline="")

canvas.create_text(
    823.0,
    12.0,
    anchor="nw",
    text="Suivez-nous",
    fill="#FFFFFF",
    font=("PublicSans Regular", 14 * -1)
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_2 clicked"),
    relief="flat",
    bg="#1B6392"
)
button_2.place(
    x=914.0,
    y=14.0,
    width=16.0,
    height=16.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_3 clicked"),
    relief="flat",
    bg="#1B6392"
)
button_3.place(
    x=942.0,
    y=14.0,
    width=16.0,
    height=16.0
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_4 clicked"),
    relief="flat",
    bg="#1B6392"
)
button_4.place(
    x=970.0,
    y=14.0,
    width=16.0,
    height=16.0
)

button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_5 clicked"),
    relief="flat",
    bg="#1B6392"
)
button_5.place(
    x=998.0,
    y=14.0,
    width=16.0,
    height=16.0
)

button_image_6 = PhotoImage(
    file=relative_to_assets("button_6.png"))
button_6 = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_6 clicked"),
    relief="flat",
    bg="#1B6392"
)
button_6.place(
    x=1054.0,
    y=14.0,
    width=16.0,
    height=16.0
)

button_image_7 = PhotoImage(
    file=relative_to_assets("button_7.png"))
button_7 = Button(
    image=button_image_7,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_7 clicked"),
    relief="flat",
    bg="#1B6392"
)
button_7.place(
    x=1026.0,
    y=14.0,
    width=16.0,
    height=16.0
)

def panier():
    from session_manager import user_id
    from subprocess import call
    if user_id != None:
        window.destroy()
        call(["python", "Panier.py"])
    else:
        window.destroy()
        call(["python", "Login.py"])

button_image_8 = PhotoImage(
    file=relative_to_assets("button_8.png"))
button_8 = Button(
    image=button_image_8,
    borderwidth=0,
    highlightthickness=0,
    command=panier,
    relief="flat",
    bg="#1B6392"
)
button_8.place(
    x=1046.0,
    y=66.0,
    width=36.0,
    height=38.0
)

canvas.create_text(
    1062.0,
    71.0,
    anchor="nw",
    text="2",
    fill="#1B6392",
    font=("PublicSans SemiBold", 12 * -1)
)

from subprocess import call
def home(): 
    window.destroy()
    call(["python", "Accueil.py"])

button_image_9 = PhotoImage(
    file=relative_to_assets("button_9.png"))
button_9 = Button(
    image=button_image_9,
    borderwidth=0,
    highlightthickness=0,
    command=home,
    relief="flat",
    bg="#1B6392"
)
button_9.place(
    x=65.0,
    y=63.0,
    width=175.0,
    height=48.0
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    605.0,
    292.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    605.0,
    587.0,
    image=image_image_3
)


# Initialisation de la variable compteur
counter = IntVar()
counter.set(1)  # Valeur initiale

# Cadre pour le compteur et les boutons
counter_frame = Frame(window, bg="#FFFFFF")


# Bouton -
button_minus = Button(
    counter_frame,
    text="-",
    font=("Arial", 16),
    command=decrement_counter,
    width=2,
    height=1,
    relief="flat",
    bg="orange",
    fg="#fff"
)
button_minus.grid(row=0, column=0, padx=5)

# Affichage du compteur
counter_label = Label(
    counter_frame,
    textvariable=counter,
    font=("Arial", 16),
    bg="#FFFFFF",
    fg="#000000"
)
counter_label.grid(row=0, column=1, padx=0)

# Bouton +
button_plus = Button(
    counter_frame,
    text="+",
    font=("Arial", 16),
    command=increment_counter,
    width=2,
    height=1,
    relief="flat",
    bg="orange",
    fg="#fff"
)
button_plus.grid(row=0, column=2, padx=5)


button_image_10 = PhotoImage(
    file=relative_to_assets("button_10.png"))
button_10 = Button(
    image=button_image_10,
    borderwidth=0,
    highlightthickness=0,
    command=ajouterPanier,
    relief="flat"
)
button_10.place(
    x=932.0,
    y=354.0,
    width=219.0,
    height=47.0
)
from session_manager import SessionManager
from tkinter import messagebox
def on_closing():
    session = SessionManager()
    if messagebox.askokcancel("Quitter", "Voulez-vous vraiment quitter ?"):
        session.logout()  # Déconnexion de l'utilisateur
        window.destroy()
        
window.protocol("WM_DELETE_WINDOW", on_closing)
window.resizable(False, False)
window.mainloop()
